// --------- КНОПКИ
@mixin btn {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  outline: none;
  border: none;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  vertical-align: middle;
  position: relative;
  overflow: hidden;
  font-family: inherit;
  transition: 0.25s ease-in-out;
  transition-property: background-color, color, border, opacity;
  cursor: pointer;
}

// @include btnColors(priF); @include btnText(priF); @include btnOut(priF, dark);
// Указываем название цвета кнопки, цвета шрифта (необяз), и % затемнения (необяз)
@mixin btnColors($bgc, $color: white, $perDark: 0) {
  &:not(:disabled) {
    color: color($color, null, false);
    background-color: darken(color($bgc, null, true), $perDark);

    &:hover {
      background-color: darken(color($bgc, null, true), 10% + $perDark);
    }

    &.--spinner-active > .spinner > div {
      background-color: color($color, null, false)
    }
  }
}

@mixin btnText($color) {
  &:not(:disabled) {
    background-color: transparent;
    color: color($color, null, false);

    &:hover {
      background-color: rgba(color($color, null, true), 0.15);
    }

    &.--spinner-active > .spinner > div {
      background-color: color($color, null, false)
    }
  }
}

@mixin btnOut($bgc, $color: dark) {
  &:not(:disabled) {
    background-color: transparent;
    color: color($color, null, false);
    border-color: color($bgc, null, false);

    &:hover {
      background-color: rgba(color($bgc, null, true), .15);
    }

    &.--spinner-active > .spinner > div {
      background-color: color($color, null, false)
    }
  }
}

// --------- ТЕКСТОВЫЕ ПОЛЯ И ЧЕКБОКСЫ
@mixin input {
  appearance: none;
  outline: none;
  width: 100%;
  background-color: color(white, null, false);
  border: 1px solid color(g200, null, false);
  font-family: inherit;
  font-size: .9375rem;
  border-radius: 4px;
  padding: var(--inputPad-top) var(--inputPad);
  transition: 0.2s ease-out;

  @include placeholder {
    color: color(g500, null, false);
  }

  &:disabled {
    border-color: color(g400, null, false);
    background-color: color(g200, null, false);
  }
}

@mixin label {
  margin: .375rem 0;
  display: inline-block;
  font-weight: 500;
  transition: 0.2s ease-out;

  & .required {
    color: color(error, null, false);
  }
}

@mixin info {
  display: block;
  padding-left: var(--inputPad);
  font-style: italic;
  font-size: 75%;
  pointer-events: none;
  transition: 0.3s ease-in-out;
  height: .675rem;
  opacity: 0;
  transform: translateY(-100%);
  @include truncateText();
}

@mixin icon-pos {
  position: absolute;
  top: calc(var(--inputPad-top));
  //top: 50%;
  //top: 0;
  //margin-top: .125em;
  //right: 0;
  right: calc(var(--inputPad) + 1.5em);
  z-index: 1;
  width: 0px;
  height: 1.5em;
  pointer-events: none;
  //font-size: 125%;
  //margin-right: var(--inputPad);
}

@mixin error($css-name) {
  /* & > .#{$css-name}__label {
     color: color(error, null, false);
     animation: labelError 0.3s ease-in-out forwards;
   }*/

  & .#{$css-name}__inner {
    & > .#{$css-name}__input,
    & > .#{$css-name}__select,
    & > .#{$css-name}__textarea {
      border-color: color(error, null, false);
      padding-right: 2.75em;
      @include placeholder {
        color: color(error, null, false);
      }
    }

    & > .#{$css-name}__select ~ .#{$css-name}__icon {
      &:before {
        content: '';
      }

      &:after {
        content: none;
      }
    }

    & > .#{$css-name}__icon {
      animation: iconError 0.3s ease-in-out forwards;
    }

    & > .#{$css-name}__info {
      color: color(error, null, false);
      opacity: 1;
      transform: translateY(0);
      height: auto;
    }
  }
}

// CHECKBOX
@mixin checkbox {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  outline: none;
  position: relative;
  margin: 0;
  font-size: 1rem;
  @include box(1rem);
  &:disabled {
    &:before, &:after {
      cursor: default;
    }

    &:before,
    &:checked:before {
      background-color: color(g200, null, false);
      border-color: color(g500, null, false);
    }
  }
  &:before,
  &:after {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    transition: 0.2s ease;
    cursor: pointer;
  }
  &:before {
    @include box(inherit);
    background-color: color(white, null, false);
    border: 1px solid color(g500, null, false);
    border-radius: 4px;
  }
  &:after {
    height: 0.675em;
    width: 1.125rem;
    border: 2px solid color(priF, null, false);
    border-top-style: none;
    border-right-style: none;
    transform: translate3d(-50%, -90%, 0) rotate(-45deg) scale(0);
  }
  &:checked:before {
    //background-color: color(g100, null, false);
    //border-color: color(priF, null, false);
  }
  &:checked:after {
    transform: translate3d(-50%, -90%, 0) rotate(-45deg) scale(1);
  }
  &:checked + label {
    font-weight: 500;
  }
  & + label {
    padding-left: 0.785rem;
    cursor: pointer;

    & a {
      color: color(info, null, false);

      &:hover {
        text-decoration: underline;
      }
    }
  }
}


// --------- POPUP

// Задник для POPUP без Zindex
@mixin backCard() {
  display: flex;
  position: fixed;
  top: 0;
  right: 0;
  left: 0;
  bottom: 0;
  font-size: 1rem;
  background-color: rgba(color(black, null, true), 0.26);
  animation: fadeIn 0.5s ease-in-out;
}

@mixin st-card($hover: true) {
  background-color: color(white, null, false);
  box-shadow: 0 0 1px rgba(color(g700, null, true), 0.26),
  0 0 15px rgba(color(g700, null, true), 0.15);

  @if ($hover) {
    transition: box-shadow .25s ease-in-out;
    &:hover {
      box-shadow: 0 0 1px rgba(color(g700, null, true), 0.26),
      2px 4px 15px rgba(color(g700, null, true), 0.26);
    }
  }
}


// ---------- ICONS

@mixin icon($name, $icon-class: false) {
  @if ($icon-class) {
    #{"&.--icon-" + $name} {
      mask: url(#{"../img/icons.svg#icons_" + $name}) no-repeat;
    }
  } @else {
    mask: url(#{"../img/icons.svg#icons_" + $name}) no-repeat;
  }
}

@mixin icon-set($bgColor, $size, $cursor: auto) {
  display: inline-block;
  @include box($size);
  background-color: color($bgColor, null, false);
  cursor: $cursor;
}
