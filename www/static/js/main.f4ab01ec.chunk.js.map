{"version":3,"sources":["services/auth.service.js","pages/Login/login.page.js","pages/Register/register.page.js","pages/Main/main.page.js","App.js","reportWebVitals.js","index.js"],"names":["username","password","axios","post","then","response","data","accessToken","localStorage","setItem","JSON","stringify","removeItem","email","parse","getItem","required","value","className","role","Login","props","handleLogin","bind","onChangeUsername","onChangePassword","state","loading","message","e","this","setState","target","preventDefault","form","validateAll","checkBtn","context","_errors","length","AuthService","login","history","push","window","location","reload","error","resMessage","toString","src","alt","onSubmit","ref","c","htmlFor","type","name","onChange","validations","disabled","style","display","Component","isEmail","vusername","vpassword","Register","handleRegister","onChangeEmail","successful","register","Main","currentUser","getCurrentUser","socket","io","connect","baseUrl","on","console","log","emit","defaults","baseURL","App","logOut","showModeratorBoard","showAdminBoard","undefined","user","roles","includes","logout","to","href","onClick","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","startApp","ReactDOM","render","document","getElementById","cordova","addEventListener","platformId","version"],"mappings":"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","file":"static/js/main.f4ab01ec.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nclass AuthService {\r\n    login(username, password) {\r\n        return axios\r\n            .post(\"signin\", {\r\n                username,\r\n                password\r\n            })\r\n            .then(response => {\r\n                if (response.data.accessToken) {\r\n                    localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n                }\r\n\r\n                return response.data;\r\n            });\r\n    }\r\n\r\n    logout() {\r\n        localStorage.removeItem(\"user\");\r\n    }\r\n\r\n    register(username, email, password) {\r\n        return axios.post(\"signup\", {\r\n            username,\r\n            email,\r\n            password\r\n        });\r\n    }\r\n\r\n    getCurrentUser() {\r\n        return JSON.parse(localStorage.getItem('user'));\r\n    }\r\n}\r\n\r\nexport default new AuthService();\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\nimport AuthService from \"../../services/auth.service\";\r\n\r\nconst required = value => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                This field is required!\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default class Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n        this.onChangeUsername = this.onChangeUsername.bind(this);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            loading: false,\r\n            message: \"\"\r\n        };\r\n    }\r\n\r\n    onChangeUsername(e) {\r\n        this.setState({\r\n            username: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangePassword(e) {\r\n        this.setState({\r\n            password: e.target.value\r\n        });\r\n    }\r\n\r\n    handleLogin(e) {\r\n        e.preventDefault();\r\n\r\n        this.setState({\r\n            message: \"\",\r\n            loading: true\r\n        });\r\n\r\n        this.form.validateAll();\r\n\r\n        if (this.checkBtn.context._errors.length === 0) {\r\n            AuthService.login(this.state.username, this.state.password).then(\r\n                () => {\r\n                    this.props.history.push(\"/\");\r\n                    window.location.reload();\r\n                },\r\n                error => {\r\n                    const resMessage =\r\n                        (error.response &&\r\n                            error.response.data &&\r\n                            error.response.data.message) ||\r\n                        error.message ||\r\n                        error.toString();\r\n\r\n                    this.setState({\r\n                        loading: false,\r\n                        message: resMessage\r\n                    });\r\n                }\r\n            );\r\n        } else {\r\n            this.setState({\r\n                loading: false\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-md-12\">\r\n                <div className=\"card card-container\">\r\n                    <img\r\n                        src=\"https://ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n                        alt=\"profile-img\"\r\n                        className=\"profile-img-card\"\r\n                    />\r\n\r\n                    <Form\r\n                        onSubmit={this.handleLogin}\r\n                        ref={c => {\r\n                            this.form = c;\r\n                        }}\r\n                    >\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"username\">Username</label>\r\n                            <Input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"username\"\r\n                                value={this.state.username}\r\n                                onChange={this.onChangeUsername}\r\n                                validations={[required]}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            <Input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                name=\"password\"\r\n                                value={this.state.password}\r\n                                onChange={this.onChangePassword}\r\n                                validations={[required]}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <button\r\n                                className=\"btn btn-primary btn-block\"\r\n                                disabled={this.state.loading}\r\n                            >\r\n                                {this.state.loading && (\r\n                                    <span className=\"spinner-border spinner-border-sm\"></span>\r\n                                )}\r\n                                <span>Login</span>\r\n                            </button>\r\n                        </div>\r\n\r\n                        {this.state.message && (\r\n                            <div className=\"form-group\">\r\n                                <div className=\"alert alert-danger\" role=\"alert\">\r\n                                    {this.state.message}\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                        <CheckButton\r\n                            style={{ display: \"none\" }}\r\n                            ref={c => {\r\n                                this.checkBtn = c;\r\n                            }}\r\n                        />\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\n\r\nimport AuthService from \"../../services/auth.service\";\r\n\r\nconst required = value => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                This field is required!\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst email = value => {\r\n    if (!isEmail(value)) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                This is not a valid email.\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst vusername = value => {\r\n    if (value.length < 3 || value.length > 20) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                The username must be between 3 and 20 characters.\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst vpassword = value => {\r\n    if (value.length < 6 || value.length > 40) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                The password must be between 6 and 40 characters.\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default class Register extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleRegister = this.handleRegister.bind(this);\r\n        this.onChangeUsername = this.onChangeUsername.bind(this);\r\n        this.onChangeEmail = this.onChangeEmail.bind(this);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n        this.state = {\r\n            username: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            successful: false,\r\n            message: \"\"\r\n        };\r\n    }\r\n\r\n    onChangeUsername(e) {\r\n        this.setState({\r\n            username: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeEmail(e) {\r\n        this.setState({\r\n            email: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangePassword(e) {\r\n        this.setState({\r\n            password: e.target.value\r\n        });\r\n    }\r\n\r\n    handleRegister(e) {\r\n        e.preventDefault();\r\n\r\n        this.setState({\r\n            message: \"\",\r\n            successful: false\r\n        });\r\n\r\n        this.form.validateAll();\r\n\r\n        if (this.checkBtn.context._errors.length === 0) {\r\n            AuthService.register(\r\n                this.state.username,\r\n                this.state.email,\r\n                this.state.password\r\n            ).then(\r\n                response => {\r\n                    this.setState({\r\n                        message: response.data.message,\r\n                        successful: true\r\n                    });\r\n                },\r\n                error => {\r\n                    const resMessage =\r\n                        (error.response &&\r\n                            error.response.data &&\r\n                            error.response.data.message) ||\r\n                        error.message ||\r\n                        error.toString();\r\n\r\n                    this.setState({\r\n                        successful: false,\r\n                        message: resMessage\r\n                    });\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-md-12\">\r\n                <div className=\"card card-container\">\r\n                    <img\r\n                        src=\"https://ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n                        alt=\"profile-img\"\r\n                        className=\"profile-img-card\"\r\n                    />\r\n\r\n                    <Form\r\n                        onSubmit={this.handleRegister}\r\n                        ref={c => {\r\n                            this.form = c;\r\n                        }}\r\n                    >\r\n                        {!this.state.successful && (\r\n                            <div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"username\">Username</label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        name=\"username\"\r\n                                        value={this.state.username}\r\n                                        onChange={this.onChangeUsername}\r\n                                        validations={[required, vusername]}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"email\">Email</label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        name=\"email\"\r\n                                        value={this.state.email}\r\n                                        onChange={this.onChangeEmail}\r\n                                        validations={[required, email]}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"password\">Password</label>\r\n                                    <Input\r\n                                        type=\"password\"\r\n                                        className=\"form-control\"\r\n                                        name=\"password\"\r\n                                        value={this.state.password}\r\n                                        onChange={this.onChangePassword}\r\n                                        validations={[required, vpassword]}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <button className=\"btn btn-primary btn-block\">Sign Up</button>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n\r\n                        {this.state.message && (\r\n                            <div className=\"form-group\">\r\n                                <div\r\n                                    className={\r\n                                        this.state.successful\r\n                                            ? \"alert alert-success\"\r\n                                            : \"alert alert-danger\"\r\n                                    }\r\n                                    role=\"alert\"\r\n                                >\r\n                                    {this.state.message}\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                        <CheckButton\r\n                            style={{ display: \"none\" }}\r\n                            ref={c => {\r\n                                this.checkBtn = c;\r\n                            }}\r\n                        />\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport io from \"socket.io-client\";\r\nimport AuthService from \"../../services/auth.service\";\r\n\r\nexport default class Main extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            currentUser: AuthService.getCurrentUser()\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        const socket = io.connect(\"ws://\" + window.baseUrl);\r\n\r\n        socket.on(\"connect\", () => {\r\n            console.log(\"Successfully connected!\");\r\n\r\n            socket.emit('login', {});\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const { currentUser } = this.state;\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                Main page\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React, {Component} from 'react';\nimport axios from \"axios\";\n\nimport Login from './pages/Login/login.page';\nimport Register from './pages/Register/register.page';\nimport Main from './pages/Main/main.page';\nimport AuthService from './services/auth.service';\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {Link} from \"react-router-dom\";\nimport {Redirect, Route, Switch} from \"react-router\";\n\nwindow.baseUrl = '62.113.118.96:9988';\naxios.defaults.baseURL = 'http://' + window.baseUrl + '/';\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.logOut = this.logOut.bind(this);\n\n        this.state = {\n            showModeratorBoard: false,\n            showAdminBoard: false,\n            currentUser: undefined,\n        };\n    }\n\n    componentDidMount() {\n        const user = AuthService.getCurrentUser();\n\n        if (user) {\n            this.setState({\n                currentUser: user,\n                showModeratorBoard: user.roles.includes(\"ROLE_MODERATOR\"),\n                showAdminBoard: user.roles.includes(\"ROLE_ADMIN\"),\n            });\n        }\n    }\n\n    logOut() {\n        AuthService.logout();\n    }\n\n    render() {\n        const { currentUser, showModeratorBoard, showAdminBoard } = this.state;\n\n        return (\n            <div>\n                <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n                    <Link to={\"/\"} className=\"navbar-brand\">\n                        Timp\n                    </Link>\n\n                    {currentUser ? (\n                        <div className=\"navbar-nav ml-auto\">\n                            <li className=\"nav-item\">\n                                <Link to={\"/profile\"} className=\"nav-link\">\n                                    {currentUser.username}\n                                </Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <a href=\"/login\" className=\"nav-link\" onClick={this.logOut}>\n                                    LogOut\n                                </a>\n                            </li>\n                        </div>\n                    ) : (\n                        <div className=\"navbar-nav ml-auto\">\n                            <li className=\"nav-item\">\n                                <Link to={\"/login\"} className=\"nav-link\">\n                                    Login\n                                </Link>\n                            </li>\n\n                            <li className=\"nav-item\">\n                                <Link to={\"/register\"} className=\"nav-link\">\n                                    Sign Up\n                                </Link>\n                            </li>\n                        </div>\n                    )}\n                </nav>\n\n                <div className=\"container mt-3\">\n                {currentUser ? (\n                    <Switch>\n                        <Route exact path={[\"/\", \"/main\"]} component={Main} />\n                        <Redirect to={\"/\"} />\n                    </Switch>\n                ) : (\n                    <Switch>\n                        <Route exact path=\"/login\" component={Login} />\n                        <Route exact path=\"/register\" component={Register} />\n                        <Redirect to={\"/login\"} />\n                    </Switch>\n                )}\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from \"react-router-dom\";\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst startApp = () => {\n\n    ReactDOM.render(\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>,\n        document.getElementById('root')\n    );\n\n    reportWebVitals();\n\n}\n\nif(window.cordova)\n{\n    document.addEventListener('deviceready', () => {\n        console.log('Running cordova-' + window.cordova.platformId + '@' + window.cordova.version);\n        startApp();\n    }, false);\n}\nelse\n    startApp();"],"sourceRoot":""}